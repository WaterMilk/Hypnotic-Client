plugins {
	id 'fabric-loom' version '1.0-SNAPSHOT'
	id 'maven-publish'
	id 'com.github.johnrengelman.shadow' version '7.1.2'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	maven {
        	name = 'Ladysnake Mods'
        	url = 'https://ladysnake.jfrog.io/artifactory/mods'
        	content {
           	 	 includeGroup 'io.github.ladysnake'
            	 includeGroupByRegex 'io\\.github\\.onyxstudios.*'
			}
        }
	maven {
		name = "meteor-maven"
		url = "https://maven.meteordev.org/snapshots"
	}
	maven { 
		url 'https://jitpack.io' 
	}
	
	jcenter()
}

allprojects {
    repositories {
        jcenter()
    }
}

dependencies {
	def dependency = { id ->
		implementation id
		shadow id
	}
	
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modImplementation include(fabricApi.module("fabric-api-base", project.fabric_version));
	modImplementation include(fabricApi.module("fabric-resource-loader-v0", project.fabric_version));

	// thanks minegame159 from meteor client
	modImplementation "baritone:fabric:${project.baritone_version}"
	include "baritone:fabric:${project.baritone_version}"

	modImplementation "io.github.ladysnake:satin:${satin_version}"
    include "io.github.ladysnake:satin:${satin_version}"
	
	// GraalJS
	dependency "org.graalvm.sdk:graal-sdk:${graaljs_version}"
	dependency "org.graalvm.js:js:${graaljs_version}"
	dependency "org.graalvm.js:js-scriptengine:${graaljs_version}"
	dependency "org.graalvm.tools:profiler:${graaljs_version}"
	dependency "org.graalvm.tools:chromeinspector:${graaljs_version}"
	dependency "org.graalvm.truffle:truffle-api:${graaljs_version}"
	
	// Discord RPC
	dependency "com.github.Vatuu:discord-rpc:1.6.2"

	modImplementation('net.earthcomputer.multiconnect:multiconnect-api:1.5.10') { transitive = false }
    include('net.earthcomputer.multiconnect:multiconnect-api:1.5.10') { transitive = false }
    
    // IRC client api
    dependency files('lib/pircbotx-master-SNAPSHOT.jar')
    
    // Waiting for multiconnect to update to 1.18 .2
    //modImplementation('net.earthcomputer.multiconnect:multiconnect-slim:1.5.10') { transitive = false }
    //include('net.earthcomputer.multiconnect:multiconnect-slim:1.5.10') { transitive = false }
}

shadowJar {
	configurations = [ project.configurations.shadow ]
	
	manifest {
        attributes 'Main-Class': 'dev.hypnotic.Installer'
    }
    
    mergeServiceFiles()
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"

	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	//remapSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
	
	manifest {
        attributes(
                'Main-Class': 'dev.hypnotic.Installer'
        )
    }
}

remapJar {
    input.set(shadowJar.archiveFile)
    archiveName = "Hypnotic-${project.mod_version}.jar"
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			//artifact(sourcesJar) {
				//builtBy remapSourcesJar
			//}
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
